// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edgelist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "edgelist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace func2vec {

namespace {

const ::google::protobuf::Descriptor* Edgelist_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edgelist_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edgelist_Edge_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edgelist_Edge_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edgelist_Label_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Edgelist_Label_reflection_ = NULL;
const ::google::protobuf::Descriptor* Edgelist_IdToLabelEntry_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_edgelist_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_edgelist_2eproto() {
  protobuf_AddDesc_edgelist_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "edgelist.proto");
  GOOGLE_CHECK(file != NULL);
  Edgelist_descriptor_ = file->message_type(0);
  static const int Edgelist_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist, edge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist, id_to_label_),
  };
  Edgelist_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Edgelist_descriptor_,
      Edgelist::default_instance_,
      Edgelist_offsets_,
      -1,
      -1,
      -1,
      sizeof(Edgelist),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist, _is_default_instance_));
  Edgelist_Edge_descriptor_ = Edgelist_descriptor_->nested_type(0);
  static const int Edgelist_Edge_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, location_),
  };
  Edgelist_Edge_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Edgelist_Edge_descriptor_,
      Edgelist_Edge::default_instance_,
      Edgelist_Edge_offsets_,
      -1,
      -1,
      -1,
      sizeof(Edgelist_Edge),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Edge, _is_default_instance_));
  Edgelist_Label_descriptor_ = Edgelist_descriptor_->nested_type(1);
  static const int Edgelist_Label_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Label, label_),
  };
  Edgelist_Label_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Edgelist_Label_descriptor_,
      Edgelist_Label::default_instance_,
      Edgelist_Label_offsets_,
      -1,
      -1,
      -1,
      sizeof(Edgelist_Label),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Label, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Edgelist_Label, _is_default_instance_));
  Edgelist_IdToLabelEntry_descriptor_ = Edgelist_descriptor_->nested_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_edgelist_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Edgelist_descriptor_, &Edgelist::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Edgelist_Edge_descriptor_, &Edgelist_Edge::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Edgelist_Label_descriptor_, &Edgelist_Label::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        Edgelist_IdToLabelEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::int32,
            ::func2vec::Edgelist_Label,
            ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                Edgelist_IdToLabelEntry_descriptor_));
}

}  // namespace

void protobuf_ShutdownFile_edgelist_2eproto() {
  delete Edgelist::default_instance_;
  delete Edgelist_reflection_;
  delete Edgelist_Edge::default_instance_;
  delete Edgelist_Edge_reflection_;
  delete Edgelist_Label::default_instance_;
  delete Edgelist_Label_reflection_;
}

void protobuf_AddDesc_edgelist_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_edgelist_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016edgelist.proto\022\010func2vec\"\250\002\n\010Edgelist\022"
    "%\n\004edge\030\001 \003(\0132\027.func2vec.Edgelist.Edge\0226"
    "\n\013id_to_label\030\002 \003(\0132!.func2vec.Edgelist."
    "IdToLabelEntry\032Y\n\004Edge\022\016\n\006source\030\001 \001(\t\022\016"
    "\n\006target\030\002 \001(\t\022\r\n\005label\030\003 \001(\t\022\020\n\010label_i"
    "d\030\005 \003(\005\022\020\n\010location\030\004 \001(\t\032\026\n\005Label\022\r\n\005la"
    "bel\030\001 \001(\t\032J\n\016IdToLabelEntry\022\013\n\003key\030\001 \001(\005"
    "\022\'\n\005value\030\002 \001(\0132\030.func2vec.Edgelist.Labe"
    "l:\0028\001b\006proto3", 333);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "edgelist.proto", &protobuf_RegisterTypes);
  Edgelist::default_instance_ = new Edgelist();
  Edgelist_Edge::default_instance_ = new Edgelist_Edge();
  Edgelist_Label::default_instance_ = new Edgelist_Label();
  Edgelist::default_instance_->InitAsDefaultInstance();
  Edgelist_Edge::default_instance_->InitAsDefaultInstance();
  Edgelist_Label::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_edgelist_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_edgelist_2eproto {
  StaticDescriptorInitializer_edgelist_2eproto() {
    protobuf_AddDesc_edgelist_2eproto();
  }
} static_descriptor_initializer_edgelist_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edgelist_Edge::kSourceFieldNumber;
const int Edgelist_Edge::kTargetFieldNumber;
const int Edgelist_Edge::kLabelFieldNumber;
const int Edgelist_Edge::kLabelIdFieldNumber;
const int Edgelist_Edge::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edgelist_Edge::Edgelist_Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:func2vec.Edgelist.Edge)
}

void Edgelist_Edge::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Edgelist_Edge::Edgelist_Edge(const Edgelist_Edge& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:func2vec.Edgelist.Edge)
}

void Edgelist_Edge::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Edgelist_Edge::~Edgelist_Edge() {
  // @@protoc_insertion_point(destructor:func2vec.Edgelist.Edge)
  SharedDtor();
}

void Edgelist_Edge::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Edgelist_Edge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edgelist_Edge::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edgelist_Edge_descriptor_;
}

const Edgelist_Edge& Edgelist_Edge::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_edgelist_2eproto();
  return *default_instance_;
}

Edgelist_Edge* Edgelist_Edge::default_instance_ = NULL;

Edgelist_Edge* Edgelist_Edge::New(::google::protobuf::Arena* arena) const {
  Edgelist_Edge* n = new Edgelist_Edge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Edgelist_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:func2vec.Edgelist.Edge)
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  label_id_.Clear();
}

bool Edgelist_Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:func2vec.Edgelist.Edge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string source = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "func2vec.Edgelist.Edge.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_target;
        break;
      }

      // optional string target = 2;
      case 2: {
        if (tag == 18) {
         parse_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->target().data(), this->target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "func2vec.Edgelist.Edge.target"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_label;
        break;
      }

      // optional string label = 3;
      case 3: {
        if (tag == 26) {
         parse_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "func2vec.Edgelist.Edge.label"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_location;
        break;
      }

      // optional string location = 4;
      case 4: {
        if (tag == 34) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "func2vec.Edgelist.Edge.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_label_id;
        break;
      }

      // repeated int32 label_id = 5;
      case 5: {
        if (tag == 42) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_label_id())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_label_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:func2vec.Edgelist.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:func2vec.Edgelist.Edge)
  return false;
#undef DO_
}

void Edgelist_Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:func2vec.Edgelist.Edge)
  // optional string source = 1;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->source(), output);
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->target(), output);
  }

  // optional string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->label(), output);
  }

  // optional string location = 4;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->location(), output);
  }

  // repeated int32 label_id = 5;
  if (this->label_id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_label_id_cached_byte_size_);
  }
  for (int i = 0; i < this->label_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->label_id(i), output);
  }

  // @@protoc_insertion_point(serialize_end:func2vec.Edgelist.Edge)
}

::google::protobuf::uint8* Edgelist_Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:func2vec.Edgelist.Edge)
  // optional string source = 1;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->source(), target);
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->target().data(), this->target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->target(), target);
  }

  // optional string label = 3;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->label(), target);
  }

  // optional string location = 4;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Edge.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->location(), target);
  }

  // repeated int32 label_id = 5;
  if (this->label_id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _label_id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->label_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->label_id(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:func2vec.Edgelist.Edge)
  return target;
}

int Edgelist_Edge::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:func2vec.Edgelist.Edge)
  int total_size = 0;

  // optional string source = 1;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional string target = 2;
  if (this->target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->target());
  }

  // optional string label = 3;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  // optional string location = 4;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // repeated int32 label_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->label_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->label_id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _label_id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edgelist_Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:func2vec.Edgelist.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Edgelist_Edge* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Edgelist_Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:func2vec.Edgelist.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:func2vec.Edgelist.Edge)
    MergeFrom(*source);
  }
}

void Edgelist_Edge::MergeFrom(const Edgelist_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:func2vec.Edgelist.Edge)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  label_id_.MergeFrom(from.label_id_);
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.target().size() > 0) {

    target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
}

void Edgelist_Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:func2vec.Edgelist.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edgelist_Edge::CopyFrom(const Edgelist_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:func2vec.Edgelist.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edgelist_Edge::IsInitialized() const {

  return true;
}

void Edgelist_Edge::Swap(Edgelist_Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edgelist_Edge::InternalSwap(Edgelist_Edge* other) {
  source_.Swap(&other->source_);
  target_.Swap(&other->target_);
  label_.Swap(&other->label_);
  label_id_.UnsafeArenaSwap(&other->label_id_);
  location_.Swap(&other->location_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Edgelist_Edge::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edgelist_Edge_descriptor_;
  metadata.reflection = Edgelist_Edge_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edgelist_Label::kLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edgelist_Label::Edgelist_Label()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:func2vec.Edgelist.Label)
}

void Edgelist_Label::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Edgelist_Label::Edgelist_Label(const Edgelist_Label& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:func2vec.Edgelist.Label)
}

void Edgelist_Label::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Edgelist_Label::~Edgelist_Label() {
  // @@protoc_insertion_point(destructor:func2vec.Edgelist.Label)
  SharedDtor();
}

void Edgelist_Label::SharedDtor() {
  label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Edgelist_Label::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edgelist_Label::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edgelist_Label_descriptor_;
}

const Edgelist_Label& Edgelist_Label::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_edgelist_2eproto();
  return *default_instance_;
}

Edgelist_Label* Edgelist_Label::default_instance_ = NULL;

Edgelist_Label* Edgelist_Label::New(::google::protobuf::Arena* arena) const {
  Edgelist_Label* n = new Edgelist_Label;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Edgelist_Label::Clear() {
// @@protoc_insertion_point(message_clear_start:func2vec.Edgelist.Label)
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Edgelist_Label::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:func2vec.Edgelist.Label)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string label = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_label()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->label().data(), this->label().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "func2vec.Edgelist.Label.label"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:func2vec.Edgelist.Label)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:func2vec.Edgelist.Label)
  return false;
#undef DO_
}

void Edgelist_Label::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:func2vec.Edgelist.Label)
  // optional string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Label.label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->label(), output);
  }

  // @@protoc_insertion_point(serialize_end:func2vec.Edgelist.Label)
}

::google::protobuf::uint8* Edgelist_Label::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:func2vec.Edgelist.Label)
  // optional string label = 1;
  if (this->label().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->label().data(), this->label().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "func2vec.Edgelist.Label.label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->label(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:func2vec.Edgelist.Label)
  return target;
}

int Edgelist_Label::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:func2vec.Edgelist.Label)
  int total_size = 0;

  // optional string label = 1;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->label());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edgelist_Label::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:func2vec.Edgelist.Label)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Edgelist_Label* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Edgelist_Label>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:func2vec.Edgelist.Label)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:func2vec.Edgelist.Label)
    MergeFrom(*source);
  }
}

void Edgelist_Label::MergeFrom(const Edgelist_Label& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:func2vec.Edgelist.Label)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.label().size() > 0) {

    label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.label_);
  }
}

void Edgelist_Label::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:func2vec.Edgelist.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edgelist_Label::CopyFrom(const Edgelist_Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:func2vec.Edgelist.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edgelist_Label::IsInitialized() const {

  return true;
}

void Edgelist_Label::Swap(Edgelist_Label* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edgelist_Label::InternalSwap(Edgelist_Label* other) {
  label_.Swap(&other->label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Edgelist_Label::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edgelist_Label_descriptor_;
  metadata.reflection = Edgelist_Label_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Edgelist::kEdgeFieldNumber;
const int Edgelist::kIdToLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Edgelist::Edgelist()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:func2vec.Edgelist)
}

void Edgelist::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Edgelist::Edgelist(const Edgelist& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:func2vec.Edgelist)
}

void Edgelist::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  id_to_label_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  id_to_label_.SetEntryDescriptor(
      &::func2vec::Edgelist_IdToLabelEntry_descriptor_);
}

Edgelist::~Edgelist() {
  // @@protoc_insertion_point(destructor:func2vec.Edgelist)
  SharedDtor();
}

void Edgelist::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Edgelist::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Edgelist::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Edgelist_descriptor_;
}

const Edgelist& Edgelist::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_edgelist_2eproto();
  return *default_instance_;
}

Edgelist* Edgelist::default_instance_ = NULL;

Edgelist* Edgelist::New(::google::protobuf::Arena* arena) const {
  Edgelist* n = new Edgelist;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Edgelist::Clear() {
// @@protoc_insertion_point(message_clear_start:func2vec.Edgelist)
  edge_.Clear();
  id_to_label_.Clear();
}

bool Edgelist::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:func2vec.Edgelist)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .func2vec.Edgelist.Edge edge = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_edge:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_edge()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_edge;
        if (input->ExpectTag(18)) goto parse_loop_id_to_label;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_id_to_label:
          Edgelist_IdToLabelEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::int32, ::func2vec::Edgelist_Label,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label > > parser(&id_to_label_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_id_to_label;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:func2vec.Edgelist)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:func2vec.Edgelist)
  return false;
#undef DO_
}

void Edgelist::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:func2vec.Edgelist)
  // repeated .func2vec.Edgelist.Edge edge = 1;
  for (unsigned int i = 0, n = this->edge_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->edge(i), output);
  }

  // map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
  if (!this->id_to_label().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterminstic() &&
        this->id_to_label().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->id_to_label().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_iterator
          it = this->id_to_label().begin();
          it != this->id_to_label().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Edgelist_IdToLabelEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(id_to_label_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Edgelist_IdToLabelEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_iterator
          it = this->id_to_label().begin();
          it != this->id_to_label().end(); ++it) {
        entry.reset(id_to_label_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // @@protoc_insertion_point(serialize_end:func2vec.Edgelist)
}

::google::protobuf::uint8* Edgelist::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:func2vec.Edgelist)
  // repeated .func2vec.Edgelist.Edge edge = 1;
  for (unsigned int i = 0, n = this->edge_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->edge(i), false, target);
  }

  // map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
  if (!this->id_to_label().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->id_to_label().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->id_to_label().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_iterator
          it = this->id_to_label().begin();
          it != this->id_to_label().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<Edgelist_IdToLabelEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(id_to_label_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Edgelist_IdToLabelEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_iterator
          it = this->id_to_label().begin();
          it != this->id_to_label().end(); ++it) {
        entry.reset(id_to_label_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // @@protoc_insertion_point(serialize_to_array_end:func2vec.Edgelist)
  return target;
}

int Edgelist::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:func2vec.Edgelist)
  int total_size = 0;

  // repeated .func2vec.Edgelist.Edge edge = 1;
  total_size += 1 * this->edge_size();
  for (int i = 0; i < this->edge_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->edge(i));
  }

  // map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
  total_size += 1 * this->id_to_label_size();
  {
    ::google::protobuf::scoped_ptr<Edgelist_IdToLabelEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >::const_iterator
        it = this->id_to_label().begin();
        it != this->id_to_label().end(); ++it) {
      entry.reset(id_to_label_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Edgelist::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:func2vec.Edgelist)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Edgelist* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Edgelist>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:func2vec.Edgelist)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:func2vec.Edgelist)
    MergeFrom(*source);
  }
}

void Edgelist::MergeFrom(const Edgelist& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:func2vec.Edgelist)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  edge_.MergeFrom(from.edge_);
  id_to_label_.MergeFrom(from.id_to_label_);
}

void Edgelist::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:func2vec.Edgelist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Edgelist::CopyFrom(const Edgelist& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:func2vec.Edgelist)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Edgelist::IsInitialized() const {

  return true;
}

void Edgelist::Swap(Edgelist* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Edgelist::InternalSwap(Edgelist* other) {
  edge_.UnsafeArenaSwap(&other->edge_);
  id_to_label_.Swap(&other->id_to_label_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Edgelist::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Edgelist_descriptor_;
  metadata.reflection = Edgelist_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Edgelist_Edge

// optional string source = 1;
void Edgelist_Edge::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edgelist_Edge::source() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.source)
}
 void Edgelist_Edge::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.source)
}
 void Edgelist_Edge::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.source)
}
 ::std::string* Edgelist_Edge::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edgelist_Edge::release_source() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.source)
}

// optional string target = 2;
void Edgelist_Edge::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edgelist_Edge::target() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.target)
}
 void Edgelist_Edge::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.target)
}
 void Edgelist_Edge::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.target)
}
 ::std::string* Edgelist_Edge::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edgelist_Edge::release_target() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.target)
}

// optional string label = 3;
void Edgelist_Edge::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edgelist_Edge::label() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.label)
}
 void Edgelist_Edge::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.label)
}
 void Edgelist_Edge::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.label)
}
 ::std::string* Edgelist_Edge::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edgelist_Edge::release_label() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.label)
}

// repeated int32 label_id = 5;
int Edgelist_Edge::label_id_size() const {
  return label_id_.size();
}
void Edgelist_Edge::clear_label_id() {
  label_id_.Clear();
}
 ::google::protobuf::int32 Edgelist_Edge::label_id(int index) const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.label_id)
  return label_id_.Get(index);
}
 void Edgelist_Edge::set_label_id(int index, ::google::protobuf::int32 value) {
  label_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.label_id)
}
 void Edgelist_Edge::add_label_id(::google::protobuf::int32 value) {
  label_id_.Add(value);
  // @@protoc_insertion_point(field_add:func2vec.Edgelist.Edge.label_id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Edgelist_Edge::label_id() const {
  // @@protoc_insertion_point(field_list:func2vec.Edgelist.Edge.label_id)
  return label_id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Edgelist_Edge::mutable_label_id() {
  // @@protoc_insertion_point(field_mutable_list:func2vec.Edgelist.Edge.label_id)
  return &label_id_;
}

// optional string location = 4;
void Edgelist_Edge::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edgelist_Edge::location() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.location)
}
 void Edgelist_Edge::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.location)
}
 void Edgelist_Edge::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.location)
}
 ::std::string* Edgelist_Edge::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edgelist_Edge::release_location() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Edge::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.location)
}

// -------------------------------------------------------------------

// Edgelist_Label

// optional string label = 1;
void Edgelist_Label::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Edgelist_Label::label() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Label.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Label::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Label.label)
}
 void Edgelist_Label::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Label.label)
}
 void Edgelist_Label::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Label.label)
}
 ::std::string* Edgelist_Label::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Label.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Edgelist_Label::release_label() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Label.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Edgelist_Label::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Label.label)
}

// -------------------------------------------------------------------

// Edgelist

// repeated .func2vec.Edgelist.Edge edge = 1;
int Edgelist::edge_size() const {
  return edge_.size();
}
void Edgelist::clear_edge() {
  edge_.Clear();
}
const ::func2vec::Edgelist_Edge& Edgelist::edge(int index) const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.edge)
  return edge_.Get(index);
}
::func2vec::Edgelist_Edge* Edgelist::mutable_edge(int index) {
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.edge)
  return edge_.Mutable(index);
}
::func2vec::Edgelist_Edge* Edgelist::add_edge() {
  // @@protoc_insertion_point(field_add:func2vec.Edgelist.edge)
  return edge_.Add();
}
::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >*
Edgelist::mutable_edge() {
  // @@protoc_insertion_point(field_mutable_list:func2vec.Edgelist.edge)
  return &edge_;
}
const ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >&
Edgelist::edge() const {
  // @@protoc_insertion_point(field_list:func2vec.Edgelist.edge)
  return edge_;
}

// map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
int Edgelist::id_to_label_size() const {
  return id_to_label_.size();
}
void Edgelist::clear_id_to_label() {
  id_to_label_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >&
Edgelist::id_to_label() const {
  // @@protoc_insertion_point(field_map:func2vec.Edgelist.id_to_label)
  return id_to_label_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >*
Edgelist::mutable_id_to_label() {
  // @@protoc_insertion_point(field_mutable_map:func2vec.Edgelist.id_to_label)
  return id_to_label_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace func2vec

// @@protoc_insertion_point(global_scope)
