// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edgelist.proto

#ifndef PROTOBUF_edgelist_2eproto__INCLUDED
#define PROTOBUF_edgelist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace func2vec {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_edgelist_2eproto();
void protobuf_AssignDesc_edgelist_2eproto();
void protobuf_ShutdownFile_edgelist_2eproto();

class Edgelist;
class Edgelist_Edge;
class Edgelist_Label;

// ===================================================================

class Edgelist_Edge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:func2vec.Edgelist.Edge) */ {
 public:
  Edgelist_Edge();
  virtual ~Edgelist_Edge();

  Edgelist_Edge(const Edgelist_Edge& from);

  inline Edgelist_Edge& operator=(const Edgelist_Edge& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Edgelist_Edge& default_instance();

  void Swap(Edgelist_Edge* other);

  // implements Message ----------------------------------------------

  inline Edgelist_Edge* New() const { return New(NULL); }

  Edgelist_Edge* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Edgelist_Edge& from);
  void MergeFrom(const Edgelist_Edge& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Edgelist_Edge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // optional string target = 2;
  void clear_target();
  static const int kTargetFieldNumber = 2;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional string label = 3;
  void clear_label();
  static const int kLabelFieldNumber = 3;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // repeated int32 label_id = 5;
  int label_id_size() const;
  void clear_label_id();
  static const int kLabelIdFieldNumber = 5;
  ::google::protobuf::int32 label_id(int index) const;
  void set_label_id(int index, ::google::protobuf::int32 value);
  void add_label_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      label_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_label_id();

  // optional string location = 4;
  void clear_location();
  static const int kLocationFieldNumber = 4;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // @@protoc_insertion_point(class_scope:func2vec.Edgelist.Edge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > label_id_;
  mutable int _label_id_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_edgelist_2eproto();
  friend void protobuf_AssignDesc_edgelist_2eproto();
  friend void protobuf_ShutdownFile_edgelist_2eproto();

  void InitAsDefaultInstance();
  static Edgelist_Edge* default_instance_;
};
// -------------------------------------------------------------------

class Edgelist_Label : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:func2vec.Edgelist.Label) */ {
 public:
  Edgelist_Label();
  virtual ~Edgelist_Label();

  Edgelist_Label(const Edgelist_Label& from);

  inline Edgelist_Label& operator=(const Edgelist_Label& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Edgelist_Label& default_instance();

  void Swap(Edgelist_Label* other);

  // implements Message ----------------------------------------------

  inline Edgelist_Label* New() const { return New(NULL); }

  Edgelist_Label* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Edgelist_Label& from);
  void MergeFrom(const Edgelist_Label& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Edgelist_Label* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string label = 1;
  void clear_label();
  static const int kLabelFieldNumber = 1;
  const ::std::string& label() const;
  void set_label(const ::std::string& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  ::std::string* mutable_label();
  ::std::string* release_label();
  void set_allocated_label(::std::string* label);

  // @@protoc_insertion_point(class_scope:func2vec.Edgelist.Label)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr label_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_edgelist_2eproto();
  friend void protobuf_AssignDesc_edgelist_2eproto();
  friend void protobuf_ShutdownFile_edgelist_2eproto();

  void InitAsDefaultInstance();
  static Edgelist_Label* default_instance_;
};
// -------------------------------------------------------------------

class Edgelist : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:func2vec.Edgelist) */ {
 public:
  Edgelist();
  virtual ~Edgelist();

  Edgelist(const Edgelist& from);

  inline Edgelist& operator=(const Edgelist& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Edgelist& default_instance();

  void Swap(Edgelist* other);

  // implements Message ----------------------------------------------

  inline Edgelist* New() const { return New(NULL); }

  Edgelist* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Edgelist& from);
  void MergeFrom(const Edgelist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Edgelist* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Edgelist_Edge Edge;
  typedef Edgelist_Label Label;

  // accessors -------------------------------------------------------

  // repeated .func2vec.Edgelist.Edge edge = 1;
  int edge_size() const;
  void clear_edge();
  static const int kEdgeFieldNumber = 1;
  const ::func2vec::Edgelist_Edge& edge(int index) const;
  ::func2vec::Edgelist_Edge* mutable_edge(int index);
  ::func2vec::Edgelist_Edge* add_edge();
  ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >*
      mutable_edge();
  const ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >&
      edge() const;

  // map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
  int id_to_label_size() const;
  void clear_id_to_label();
  static const int kIdToLabelFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >&
      id_to_label() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >*
      mutable_id_to_label();

  // @@protoc_insertion_point(class_scope:func2vec.Edgelist)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge > edge_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int32, ::func2vec::Edgelist_Label,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Edgelist_IdToLabelEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int32, ::func2vec::Edgelist_Label,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > id_to_label_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_edgelist_2eproto();
  friend void protobuf_AssignDesc_edgelist_2eproto();
  friend void protobuf_ShutdownFile_edgelist_2eproto();

  void InitAsDefaultInstance();
  static Edgelist* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Edgelist_Edge

// optional string source = 1;
inline void Edgelist_Edge::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Edgelist_Edge::source() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.source)
}
inline void Edgelist_Edge::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.source)
}
inline void Edgelist_Edge::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.source)
}
inline ::std::string* Edgelist_Edge::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Edgelist_Edge::release_source() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.source)
}

// optional string target = 2;
inline void Edgelist_Edge::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Edgelist_Edge::target() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.target)
  return target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_target(const ::std::string& value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.target)
}
inline void Edgelist_Edge::set_target(const char* value) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.target)
}
inline void Edgelist_Edge::set_target(const char* value, size_t size) {
  
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.target)
}
inline ::std::string* Edgelist_Edge::mutable_target() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Edgelist_Edge::release_target() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.target)
  
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    
  } else {
    
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.target)
}

// optional string label = 3;
inline void Edgelist_Edge::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Edgelist_Edge::label() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.label)
}
inline void Edgelist_Edge::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.label)
}
inline void Edgelist_Edge::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.label)
}
inline ::std::string* Edgelist_Edge::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Edgelist_Edge::release_label() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.label)
}

// repeated int32 label_id = 5;
inline int Edgelist_Edge::label_id_size() const {
  return label_id_.size();
}
inline void Edgelist_Edge::clear_label_id() {
  label_id_.Clear();
}
inline ::google::protobuf::int32 Edgelist_Edge::label_id(int index) const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.label_id)
  return label_id_.Get(index);
}
inline void Edgelist_Edge::set_label_id(int index, ::google::protobuf::int32 value) {
  label_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.label_id)
}
inline void Edgelist_Edge::add_label_id(::google::protobuf::int32 value) {
  label_id_.Add(value);
  // @@protoc_insertion_point(field_add:func2vec.Edgelist.Edge.label_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Edgelist_Edge::label_id() const {
  // @@protoc_insertion_point(field_list:func2vec.Edgelist.Edge.label_id)
  return label_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Edgelist_Edge::mutable_label_id() {
  // @@protoc_insertion_point(field_mutable_list:func2vec.Edgelist.Edge.label_id)
  return &label_id_;
}

// optional string location = 4;
inline void Edgelist_Edge::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Edgelist_Edge::location() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Edge.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Edge.location)
}
inline void Edgelist_Edge::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Edge.location)
}
inline void Edgelist_Edge::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Edge.location)
}
inline ::std::string* Edgelist_Edge::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Edge.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Edgelist_Edge::release_location() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Edge.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Edge::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Edge.location)
}

// -------------------------------------------------------------------

// Edgelist_Label

// optional string label = 1;
inline void Edgelist_Label::clear_label() {
  label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Edgelist_Label::label() const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.Label.label)
  return label_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Label::set_label(const ::std::string& value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:func2vec.Edgelist.Label.label)
}
inline void Edgelist_Label::set_label(const char* value) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:func2vec.Edgelist.Label.label)
}
inline void Edgelist_Label::set_label(const char* value, size_t size) {
  
  label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:func2vec.Edgelist.Label.label)
}
inline ::std::string* Edgelist_Label::mutable_label() {
  
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.Label.label)
  return label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Edgelist_Label::release_label() {
  // @@protoc_insertion_point(field_release:func2vec.Edgelist.Label.label)
  
  return label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Edgelist_Label::set_allocated_label(::std::string* label) {
  if (label != NULL) {
    
  } else {
    
  }
  label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label);
  // @@protoc_insertion_point(field_set_allocated:func2vec.Edgelist.Label.label)
}

// -------------------------------------------------------------------

// Edgelist

// repeated .func2vec.Edgelist.Edge edge = 1;
inline int Edgelist::edge_size() const {
  return edge_.size();
}
inline void Edgelist::clear_edge() {
  edge_.Clear();
}
inline const ::func2vec::Edgelist_Edge& Edgelist::edge(int index) const {
  // @@protoc_insertion_point(field_get:func2vec.Edgelist.edge)
  return edge_.Get(index);
}
inline ::func2vec::Edgelist_Edge* Edgelist::mutable_edge(int index) {
  // @@protoc_insertion_point(field_mutable:func2vec.Edgelist.edge)
  return edge_.Mutable(index);
}
inline ::func2vec::Edgelist_Edge* Edgelist::add_edge() {
  // @@protoc_insertion_point(field_add:func2vec.Edgelist.edge)
  return edge_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >*
Edgelist::mutable_edge() {
  // @@protoc_insertion_point(field_mutable_list:func2vec.Edgelist.edge)
  return &edge_;
}
inline const ::google::protobuf::RepeatedPtrField< ::func2vec::Edgelist_Edge >&
Edgelist::edge() const {
  // @@protoc_insertion_point(field_list:func2vec.Edgelist.edge)
  return edge_;
}

// map<int32, .func2vec.Edgelist.Label> id_to_label = 2;
inline int Edgelist::id_to_label_size() const {
  return id_to_label_.size();
}
inline void Edgelist::clear_id_to_label() {
  id_to_label_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >&
Edgelist::id_to_label() const {
  // @@protoc_insertion_point(field_map:func2vec.Edgelist.id_to_label)
  return id_to_label_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::func2vec::Edgelist_Label >*
Edgelist::mutable_id_to_label() {
  // @@protoc_insertion_point(field_mutable_map:func2vec.Edgelist.id_to_label)
  return id_to_label_.MutableMap();
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace func2vec

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_edgelist_2eproto__INCLUDED
